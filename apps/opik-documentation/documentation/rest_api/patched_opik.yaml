components:
  parameters:
    ApiKeyHeader:
      description: If using Opik cloud, provide your API key. Otherwise, leave empty.
      in: header
      name: authorization
      required: false
      schema:
        type: string
    WorkspaceHeader:
      description: If using Opik cloud, provide your workspace name. Otherwise, leave
        empty.
      in: header
      name: Comet-Workspace
      required: false
      schema:
        type: string
  schemas:
    AssistantMessage:
      properties:
        content:
          type: string
        function_call:
          $ref: "#/components/schemas/FunctionCall"
        name:
          type: string
        refusal:
          type: boolean
        role:
          enum:
            - system
            - user
            - assistant
            - tool
            - function
          type: string
        tool_calls:
          items:
            $ref: "#/components/schemas/ToolCall"
          type: array
      type: object
    AuthDetailsHolder:
      type: object
    AutomationRuleEvaluator:
      discriminator:
        mapping:
          llm_as_judge: "#/components/schemas/AutomationRuleEvaluatorLlmAsJudge"
        propertyName: type
      properties:
        action:
          enum:
            - evaluator
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          type: string
        project_id:
          format: uuid
          readOnly: true
          type: string
        sampling_rate:
          format: float
          type: number
        type:
          enum:
            - llm_as_judge
          type: string
      required:
        - name
        - type
      type: object
    AutomationRuleEvaluatorLlmAsJudge:
      allOf:
        - $ref: "#/components/schemas/AutomationRuleEvaluator"
        - properties:
            code:
              $ref: "#/components/schemas/LlmAsJudgeCode"
          type: object
      required:
        - code
        - name
        - type
      type: object
    AutomationRuleEvaluatorLlmAsJudge_Public:
      allOf:
        - $ref: "#/components/schemas/AutomationRuleEvaluator_Public"
        - properties:
            code:
              $ref: "#/components/schemas/LlmAsJudgeCode_Public"
          type: object
      required:
        - code
        - name
        - type
      type: object
    AutomationRuleEvaluatorLlmAsJudge_Write:
      allOf:
        - $ref: "#/components/schemas/AutomationRuleEvaluator_Write"
        - properties:
            code:
              $ref: "#/components/schemas/LlmAsJudgeCode_Write"
          type: object
      required:
        - code
        - name
        - type
      type: object
    AutomationRuleEvaluatorObject_Public:
      discriminator:
        mapping:
          llm_as_judge: "#/components/schemas/AutomationRuleEvaluatorLlmAsJudge_Public"
        propertyName: type
      properties:
        action:
          enum:
            - evaluator
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          type: string
        project_id:
          format: uuid
          readOnly: true
          type: string
        sampling_rate:
          format: float
          type: number
        type:
          enum:
            - llm_as_judge
          type: string
      required:
        - name
        - type
      type: object
    AutomationRuleEvaluatorPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/AutomationRuleEvaluatorObject_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    AutomationRuleEvaluatorUpdate:
      properties:
        code:
          $ref: "#/components/schemas/LlmAsJudgeCode"
        name:
          type: string
        sampling_rate:
          format: float
          type: number
      required:
        - code
        - name
        - sampling_rate
      type: object
    AutomationRuleEvaluator_Public:
      discriminator:
        mapping:
          llm_as_judge: "#/components/schemas/AutomationRuleEvaluatorLlmAsJudge_Public"
        propertyName: type
      properties:
        action:
          enum:
            - evaluator
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          type: string
        project_id:
          format: uuid
          readOnly: true
          type: string
        sampling_rate:
          format: float
          type: number
        type:
          enum:
            - llm_as_judge
          type: string
      required:
        - name
        - type
      type: object
    AutomationRuleEvaluator_Write:
      discriminator:
        mapping:
          llm_as_judge: "#/components/schemas/AutomationRuleEvaluatorLlmAsJudge_Write"
        propertyName: type
      properties:
        action:
          enum:
            - evaluator
          type: string
        name:
          type: string
        sampling_rate:
          format: float
          type: number
        type:
          enum:
            - llm_as_judge
          type: string
      required:
        - name
        - type
      type: object
    AvgValueStat_Public:
      allOf:
        - $ref: "#/components/schemas/ProjectStatItemObject_Public"
        - properties:
            value:
              format: double
              type: number
          type: object
      type: object
    BatchDelete:
      properties:
        ids:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - ids
      type: object
    BiInformation:
      properties:
        count:
          format: int64
          type: integer
        user:
          type: string
        workspace_id:
          type: string
      type: object
    BiInformationResponse:
      properties:
        bi_information:
          items:
            $ref: "#/components/schemas/BiInformation"
          type: array
      type: object
    CategoricalFeedbackDefinition:
      allOf:
        - $ref: "#/components/schemas/Feedback"
        - properties:
            created_at:
              format: date-time
              readOnly: true
              type: string
            created_by:
              readOnly: true
              type: string
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail"
            last_updated_at:
              format: date-time
              readOnly: true
              type: string
            last_updated_by:
              readOnly: true
              type: string
          type: object
      required:
        - details
        - name
        - type
      type: object
    CategoricalFeedbackDefinition_Create:
      allOf:
        - $ref: "#/components/schemas/Feedback_Create"
        - properties:
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail_Create"
          type: object
      required:
        - details
        - name
        - type
      type: object
    CategoricalFeedbackDefinition_Public:
      allOf:
        - $ref: "#/components/schemas/Feedback_Public"
        - properties:
            created_at:
              format: date-time
              readOnly: true
              type: string
            created_by:
              readOnly: true
              type: string
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail_Public"
            last_updated_at:
              format: date-time
              readOnly: true
              type: string
            last_updated_by:
              readOnly: true
              type: string
          type: object
      required:
        - details
        - name
        - type
      type: object
    CategoricalFeedbackDefinition_Update:
      allOf:
        - $ref: "#/components/schemas/Feedback_Update"
        - properties:
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail_Update"
          type: object
      required:
        - details
        - name
        - type
      type: object
    CategoricalFeedbackDetail:
      properties:
        categories:
          additionalProperties:
            format: double
            type: number
          type: object
      required:
        - categories
      type: object
    CategoricalFeedbackDetail_Create:
      properties:
        categories:
          additionalProperties:
            format: double
            type: number
          type: object
      required:
        - categories
      type: object
    CategoricalFeedbackDetail_Public:
      properties:
        categories:
          additionalProperties:
            format: double
            type: number
          type: object
      required:
        - categories
      type: object
    CategoricalFeedbackDetail_Update:
      properties:
        categories:
          additionalProperties:
            format: double
            type: number
          type: object
      required:
        - categories
      type: object
    ChatCompletionChoice:
      properties:
        delta:
          $ref: "#/components/schemas/Delta"
        finish_reason:
          type: string
        index:
          format: int32
          type: integer
        message:
          $ref: "#/components/schemas/AssistantMessage"
      type: object
    ChatCompletionRequest:
      properties:
        frequency_penalty:
          format: double
          type: number
        function_call:
          $ref: "#/components/schemas/FunctionCall"
        functions:
          items:
            $ref: "#/components/schemas/Function"
          type: array
        logit_bias:
          additionalProperties:
            format: int32
            type: integer
          type: object
        max_completion_tokens:
          format: int32
          type: integer
        max_tokens:
          format: int32
          type: integer
        messages:
          items:
            $ref: "#/components/schemas/Message"
          type: array
        model:
          type: string
        n:
          format: int32
          type: integer
        parallel_tool_calls:
          type: boolean
        presence_penalty:
          format: double
          type: number
        response_format:
          $ref: "#/components/schemas/ResponseFormat"
        seed:
          format: int32
          type: integer
        stop:
          items:
            type: string
          type: array
        stream:
          type: boolean
        stream_options:
          $ref: "#/components/schemas/StreamOptions"
        temperature:
          format: double
          type: number
        tool_choice:
          type: object
        tools:
          items:
            $ref: "#/components/schemas/Tool"
          type: array
        top_p:
          format: double
          type: number
        user:
          type: string
      type: object
    ChatCompletionResponse:
      properties:
        choices:
          items:
            $ref: "#/components/schemas/ChatCompletionChoice"
          type: array
        created:
          format: int32
          type: integer
        id:
          type: string
        model:
          type: string
        system_fingerprint:
          type: string
        usage:
          $ref: "#/components/schemas/Usage"
      type: object
    ChunkedOutputJsonNode:
      properties:
        closed:
          type: boolean
        type:
          properties:
            typeName:
              type: string
          type: object
      type: object
    ChunkedOutputJsonNode_Public:
      properties:
        closed:
          type: boolean
        type:
          properties:
            typeName:
              type: string
          type: object
      type: object
    Column:
      properties:
        filterField:
          description: The field to use for filtering
          readOnly: true
          type: string
        filter_field_prefix:
          type: string
        name:
          type: string
        types:
          items:
            enum:
              - string
              - number
              - object
              - boolean
              - array
              - "null"
            type: string
          type: array
          uniqueItems: true
      type: object
    Column_Compare:
      properties:
        filterField:
          description: The field to use for filtering
          readOnly: true
          type: string
        filter_field_prefix:
          type: string
        name:
          type: string
        types:
          items:
            enum:
              - string
              - number
              - object
              - boolean
              - array
              - "null"
            type: string
          type: array
          uniqueItems: true
      type: object
    Column_Public:
      properties:
        filterField:
          description: The field to use for filtering
          readOnly: true
          type: string
        filter_field_prefix:
          type: string
        name:
          type: string
        types:
          items:
            enum:
              - string
              - number
              - object
              - boolean
              - array
              - "null"
            type: string
          type: array
          uniqueItems: true
      type: object
    Comment:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        text:
          type: string
      required:
        - text
      type: object
    Comment_Compare:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        text:
          type: string
      readOnly: true
      required:
        - text
      type: object
    Comment_Public:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        text:
          type: string
      readOnly: true
      required:
        - text
      type: object
    CompletionTokensDetails:
      properties:
        reasoning_tokens:
          format: int32
          type: integer
      type: object
    CountValueStat_Public:
      allOf:
        - $ref: "#/components/schemas/ProjectStatItemObject_Public"
        - properties:
            value:
              format: int64
              type: integer
          type: object
      type: object
    CreatePromptVersion_Detail:
      properties:
        name:
          type: string
        version:
          $ref: "#/components/schemas/PromptVersion_Detail"
      required:
        - name
        - version
      type: object
    DataPointNumber_Public:
      properties:
        time:
          format: date-time
          type: string
        value:
          type: number
      required:
        - time
      type: object
    Dataset:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        dataset_items_count:
          format: int64
          readOnly: true
          type: integer
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        experiment_count:
          format: int64
          readOnly: true
          type: integer
        id:
          format: uuid
          type: string
        last_created_experiment_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        most_recent_experiment_at:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
      required:
        - name
      type: object
    DatasetIdentifier:
      properties:
        dataset_name:
          type: string
      required:
        - dataset_name
      type: object
    DatasetIdentifier_Public:
      properties:
        dataset_name:
          type: string
      required:
        - dataset_name
      type: object
    DatasetItem:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        data:
          $ref: "#/components/schemas/JsonNode"
        experiment_items:
          items:
            $ref: "#/components/schemas/ExperimentItem"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        source:
          enum:
            - manual
            - trace
            - span
            - sdk
          type: string
        span_id:
          format: uuid
          type: string
        trace_id:
          format: uuid
          type: string
      required:
        - data
        - source
      type: object
    DatasetItemBatch:
      properties:
        dataset_id:
          description: If null, dataset_name must be provided
          format: uuid
          type: string
        dataset_name:
          description: If null, dataset_id must be provided
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        items:
          items:
            $ref: "#/components/schemas/DatasetItem"
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - items
      type: object
    DatasetItemBatch_Write:
      properties:
        dataset_id:
          description: If null, dataset_name must be provided
          format: uuid
          type: string
        dataset_name:
          description: If null, dataset_id must be provided
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        items:
          items:
            $ref: "#/components/schemas/DatasetItem_Write"
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - items
      type: object
    DatasetItemPage_Compare:
      properties:
        columns:
          items:
            $ref: "#/components/schemas/Column_Compare"
          type: array
          uniqueItems: true
        content:
          items:
            $ref: "#/components/schemas/DatasetItem_Compare"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    DatasetItemPage_Public:
      properties:
        columns:
          items:
            $ref: "#/components/schemas/Column_Public"
          type: array
          uniqueItems: true
        content:
          items:
            $ref: "#/components/schemas/DatasetItem_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    DatasetItemStreamRequest:
      properties:
        dataset_name:
          type: string
        last_retrieved_id:
          format: uuid
          type: string
        steam_limit:
          format: int32
          type: integer
      required:
        - dataset_name
      type: object
    DatasetItem_Compare:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        data:
          $ref: "#/components/schemas/JsonNode"
        experiment_items:
          items:
            $ref: "#/components/schemas/ExperimentItem_Compare"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        source:
          enum:
            - manual
            - trace
            - span
            - sdk
          type: string
        span_id:
          format: uuid
          type: string
        trace_id:
          format: uuid
          type: string
      required:
        - data
        - source
      type: object
    DatasetItem_Public:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        data:
          $ref: "#/components/schemas/JsonNode"
        experiment_items:
          items:
            $ref: "#/components/schemas/ExperimentItem_Public"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        source:
          enum:
            - manual
            - trace
            - span
            - sdk
          type: string
        span_id:
          format: uuid
          type: string
        trace_id:
          format: uuid
          type: string
      required:
        - data
        - source
      type: object
    DatasetItem_Write:
      properties:
        data:
          $ref: "#/components/schemas/JsonNode"
        id:
          format: uuid
          type: string
        source:
          enum:
            - manual
            - trace
            - span
            - sdk
          type: string
        span_id:
          format: uuid
          type: string
        trace_id:
          format: uuid
          type: string
      required:
        - data
        - source
      type: object
    DatasetItemsDelete:
      properties:
        item_ids:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - item_ids
      type: object
    DatasetPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/Dataset_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    DatasetUpdate:
      properties:
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        name:
          type: string
      required:
        - name
      type: object
    Dataset_Public:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        dataset_items_count:
          format: int64
          readOnly: true
          type: integer
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        experiment_count:
          format: int64
          readOnly: true
          type: integer
        id:
          format: uuid
          type: string
        last_created_experiment_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        most_recent_experiment_at:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
      required:
        - name
      type: object
    Dataset_Write:
      properties:
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
        - name
      type: object
    DeleteFeedbackScore:
      properties:
        name:
          type: string
      required:
        - name
      type: object
    Delta:
      properties:
        content:
          type: string
        function_call:
          $ref: "#/components/schemas/FunctionCall"
        role:
          enum:
            - system
            - user
            - assistant
            - tool
            - function
          type: string
        tool_calls:
          items:
            $ref: "#/components/schemas/ToolCall"
          type: array
      type: object
    ErrorInfo:
      properties:
        exception_type:
          type: string
        message:
          type: string
        traceback:
          type: string
      required:
        - exception_type
        - traceback
      type: object
    ErrorInfo_Public:
      properties:
        exception_type:
          type: string
        message:
          type: string
        traceback:
          type: string
      required:
        - exception_type
        - traceback
      type: object
    ErrorInfo_Write:
      properties:
        exception_type:
          type: string
        message:
          type: string
        traceback:
          type: string
      required:
        - exception_type
        - traceback
      type: object
    ErrorMessage:
      properties:
        code:
          format: int32
          type: integer
        details:
          type: string
        message:
          type: string
      type: object
    ErrorMessage_Detail:
      properties:
        code:
          format: int32
          type: integer
        details:
          type: string
        message:
          type: string
      type: object
    ErrorMessage_Detailed:
      properties:
        errors:
          items:
            type: string
          type: array
      type: object
    ErrorMessage_Public:
      properties:
        code:
          format: int32
          type: integer
        details:
          type: string
        message:
          type: string
      type: object
    Experiment:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        dataset_id:
          format: uuid
          readOnly: true
          type: string
        dataset_name:
          type: string
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScoreAverage"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode"
        name:
          type: string
        prompt_version:
          $ref: "#/components/schemas/PromptVersionLink"
        prompt_versions:
          items:
            $ref: "#/components/schemas/PromptVersionLink"
          type: array
        trace_count:
          format: int64
          readOnly: true
          type: integer
      required:
        - dataset_name
      type: object
    ExperimentItem:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        dataset_item_id:
          format: uuid
          type: string
        experiment_id:
          format: uuid
          type: string
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScore"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode"
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        output:
          $ref: "#/components/schemas/JsonNode"
        trace_id:
          format: uuid
          type: string
      required:
        - dataset_item_id
        - experiment_id
        - trace_id
      type: object
    ExperimentItemStreamRequest:
      properties:
        experiment_name:
          type: string
        last_retrieved_id:
          format: uuid
          type: string
        limit:
          format: int32
          type: integer
        truncate:
          default: true
          description: Truncate image included in either input, output or metadata
          type: boolean
      required:
        - experiment_name
      type: object
    ExperimentItem_Compare:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment_Compare"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        dataset_item_id:
          format: uuid
          type: string
        experiment_id:
          format: uuid
          type: string
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScore_Compare"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode_Compare"
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        output:
          $ref: "#/components/schemas/JsonNode_Compare"
        trace_id:
          format: uuid
          type: string
      readOnly: true
      required:
        - dataset_item_id
        - experiment_id
        - trace_id
      type: object
    ExperimentItem_Public:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        dataset_item_id:
          format: uuid
          type: string
        experiment_id:
          format: uuid
          type: string
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        trace_id:
          format: uuid
          type: string
      required:
        - dataset_item_id
        - experiment_id
        - trace_id
      type: object
    ExperimentItemsBatch:
      properties:
        experiment_items:
          items:
            $ref: "#/components/schemas/ExperimentItem"
          maxItems: 1000
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - experiment_items
      type: object
    ExperimentItemsDelete:
      properties:
        ids:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - ids
      type: object
    ExperimentPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/Experiment_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    Experiment_Public:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment_Public"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        dataset_id:
          format: uuid
          readOnly: true
          type: string
        dataset_name:
          type: string
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScoreAverage_Public"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        name:
          type: string
        prompt_version:
          $ref: "#/components/schemas/PromptVersionLink_Public"
        prompt_versions:
          items:
            $ref: "#/components/schemas/PromptVersionLink_Public"
          type: array
        trace_count:
          format: int64
          readOnly: true
          type: integer
      required:
        - dataset_name
      type: object
    Experiment_Write:
      properties:
        dataset_name:
          type: string
        id:
          format: uuid
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
        name:
          type: string
        prompt_version:
          $ref: "#/components/schemas/PromptVersionLink_Write"
        prompt_versions:
          items:
            $ref: "#/components/schemas/PromptVersionLink_Write"
          type: array
      required:
        - dataset_name
      type: object
    ExperimentsDelete:
      properties:
        ids:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - ids
      type: object
    Feedback:
      discriminator:
        mapping:
          categorical: "#/components/schemas/CategoricalFeedbackDefinition"
          numerical: "#/components/schemas/NumericalFeedbackDefinition"
        propertyName: type
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        lastUpdatedAt:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
            - numerical
            - categorical
          type: string
      required:
        - name
        - type
      type: object
    FeedbackDefinitionPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/FeedbackObject_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    FeedbackObject_Public:
      discriminator:
        mapping:
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Public"
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Public"
        propertyName: type
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        lastUpdatedAt:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
            - numerical
            - categorical
          type: string
      required:
        - name
        - type
      type: object
    FeedbackScore:
      properties:
        category_name:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          type: string
        reason:
          type: string
        source:
          enum:
            - ui
            - sdk
            - online_scoring
          type: string
        value:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000.0
          minimum: -1000000000.0
          type: number
      readOnly: true
      required:
        - name
        - source
        - value
      type: object
    FeedbackScoreAverage:
      properties:
        name:
          type: string
        value:
          type: number
      required:
        - name
        - value
      type: object
    FeedbackScoreAverage_Detailed:
      properties:
        name:
          type: string
        value:
          type: number
      readOnly: true
      required:
        - name
        - value
      type: object
    FeedbackScoreAverage_Public:
      properties:
        name:
          type: string
        value:
          type: number
      readOnly: true
      required:
        - name
        - value
      type: object
    FeedbackScoreBatch:
      properties:
        scores:
          items:
            $ref: "#/components/schemas/FeedbackScoreBatchItem"
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - scores
      type: object
    FeedbackScoreBatchItem:
      properties:
        category_name:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        project_name:
          description: If null, the default project is used
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        reason:
          type: string
        source:
          enum:
            - ui
            - sdk
            - online_scoring
          type: string
        value:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000.0
          minimum: -1000000000.0
          type: number
      required:
        - id
        - name
        - source
        - value
      type: object
    FeedbackScoreNames:
      properties:
        scores:
          items:
            $ref: "#/components/schemas/ScoreName"
          type: array
      type: object
    FeedbackScore_Compare:
      properties:
        category_name:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          type: string
        reason:
          type: string
        source:
          enum:
            - ui
            - sdk
            - online_scoring
          type: string
        value:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000.0
          minimum: -1000000000.0
          type: number
      readOnly: true
      required:
        - name
        - source
        - value
      type: object
    FeedbackScore_Public:
      properties:
        category_name:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          type: string
        reason:
          type: string
        source:
          enum:
            - ui
            - sdk
            - online_scoring
          type: string
        value:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000.0
          minimum: -1000000000.0
          type: number
      readOnly: true
      required:
        - name
        - source
        - value
      type: object
    Feedback_Create:
      discriminator:
        mapping:
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Create"
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Create"
        propertyName: type
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
            - numerical
            - categorical
          type: string
      required:
        - name
        - type
      type: object
    Feedback_Public:
      discriminator:
        mapping:
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Public"
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Public"
        propertyName: type
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        lastUpdatedAt:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
            - numerical
            - categorical
          type: string
      required:
        - name
        - type
      type: object
    Feedback_Update:
      discriminator:
        mapping:
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Update"
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Update"
        propertyName: type
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
            - numerical
            - categorical
          type: string
      required:
        - name
        - type
      type: object
    Function:
      properties:
        description:
          type: string
        name:
          type: string
        parameters:
          $ref: "#/components/schemas/JsonObjectSchema"
        strict:
          type: boolean
      type: object
    FunctionCall:
      properties:
        arguments:
          type: string
        name:
          type: string
      type: object
    Identifier_Public:
      properties:
        name:
          type: string
      required:
        - name
      type: object
    JsonNode:
      type: object
    JsonNode_Compare:
      readOnly: true
      type: object
    JsonNode_Detail:
      type: object
    JsonNode_Public:
      type: object
    JsonNode_Write:
      type: object
    JsonObjectSchema:
      properties:
        $defs:
          additionalProperties:
            $ref: "#/components/schemas/JsonSchemaElement"
          type: object
        additionalProperties:
          type: boolean
        description:
          type: string
        properties:
          additionalProperties:
            $ref: "#/components/schemas/JsonSchemaElement"
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    JsonSchema:
      properties:
        name:
          type: string
        schema:
          $ref: "#/components/schemas/JsonObjectSchema"
        strict:
          type: boolean
      type: object
    JsonSchemaElement:
      properties:
        type:
          type: string
      type: object
    LlmAsJudgeCode:
      properties:
        messages:
          items:
            $ref: "#/components/schemas/LlmAsJudgeMessage"
          type: array
        model:
          $ref: "#/components/schemas/LlmAsJudgeModelParameters"
        schema:
          items:
            $ref: "#/components/schemas/LlmAsJudgeOutputSchema"
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
      required:
        - messages
        - model
        - schema
        - variables
      type: object
    LlmAsJudgeCode_Public:
      properties:
        messages:
          items:
            $ref: "#/components/schemas/LlmAsJudgeMessage_Public"
          type: array
        model:
          $ref: "#/components/schemas/LlmAsJudgeModelParameters_Public"
        schema:
          items:
            $ref: "#/components/schemas/LlmAsJudgeOutputSchema_Public"
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
      required:
        - messages
        - model
        - schema
        - variables
      type: object
    LlmAsJudgeCode_Write:
      properties:
        messages:
          items:
            $ref: "#/components/schemas/LlmAsJudgeMessage_Write"
          type: array
        model:
          $ref: "#/components/schemas/LlmAsJudgeModelParameters_Write"
        schema:
          items:
            $ref: "#/components/schemas/LlmAsJudgeOutputSchema_Write"
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
      required:
        - messages
        - model
        - schema
        - variables
      type: object
    LlmAsJudgeMessage:
      properties:
        content:
          type: string
        role:
          enum:
            - SYSTEM
            - USER
            - AI
            - TOOL_EXECUTION_RESULT
          type: string
      required:
        - content
        - role
      type: object
    LlmAsJudgeMessage_Public:
      properties:
        content:
          type: string
        role:
          enum:
            - SYSTEM
            - USER
            - AI
            - TOOL_EXECUTION_RESULT
          type: string
      required:
        - content
        - role
      type: object
    LlmAsJudgeMessage_Write:
      properties:
        content:
          type: string
        role:
          enum:
            - SYSTEM
            - USER
            - AI
            - TOOL_EXECUTION_RESULT
          type: string
      required:
        - content
        - role
      type: object
    LlmAsJudgeModelParameters:
      properties:
        name:
          type: string
        temperature:
          format: double
          type: number
      required:
        - name
        - temperature
      type: object
    LlmAsJudgeModelParameters_Public:
      properties:
        name:
          type: string
        temperature:
          format: double
          type: number
      required:
        - name
        - temperature
      type: object
    LlmAsJudgeModelParameters_Write:
      properties:
        name:
          type: string
        temperature:
          format: double
          type: number
      required:
        - name
        - temperature
      type: object
    LlmAsJudgeOutputSchema:
      properties:
        description:
          type: string
        name:
          type: string
        type:
          enum:
            - BOOLEAN
            - INTEGER
            - DOUBLE
          type: string
      required:
        - description
        - name
        - type
      type: object
    LlmAsJudgeOutputSchema_Public:
      properties:
        description:
          type: string
        name:
          type: string
        type:
          enum:
            - BOOLEAN
            - INTEGER
            - DOUBLE
          type: string
      required:
        - description
        - name
        - type
      type: object
    LlmAsJudgeOutputSchema_Write:
      properties:
        description:
          type: string
        name:
          type: string
        type:
          enum:
            - BOOLEAN
            - INTEGER
            - DOUBLE
          type: string
      required:
        - description
        - name
        - type
      type: object
    LogItem:
      properties:
        level:
          enum:
            - INFO
            - WARN
            - ERROR
            - DEBUG
            - TRACE
          readOnly: true
          type: string
        markers:
          additionalProperties:
            readOnly: true
            type: string
          readOnly: true
          type: object
        message:
          readOnly: true
          type: string
        rule_id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
      type: object
    LogPage:
      properties:
        content:
          items:
            $ref: "#/components/schemas/LogItem"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    Message:
      type: object
    NumericalFeedbackDefinition:
      allOf:
        - $ref: "#/components/schemas/Feedback"
        - properties:
            created_at:
              format: date-time
              readOnly: true
              type: string
            created_by:
              readOnly: true
              type: string
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail"
            last_updated_at:
              format: date-time
              readOnly: true
              type: string
            last_updated_by:
              readOnly: true
              type: string
          type: object
      required:
        - details
        - name
        - type
      type: object
    NumericalFeedbackDefinition_Create:
      allOf:
        - $ref: "#/components/schemas/Feedback_Create"
        - properties:
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail_Create"
          type: object
      required:
        - details
        - name
        - type
      type: object
    NumericalFeedbackDefinition_Public:
      allOf:
        - $ref: "#/components/schemas/Feedback_Public"
        - properties:
            created_at:
              format: date-time
              readOnly: true
              type: string
            created_by:
              readOnly: true
              type: string
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail_Public"
            last_updated_at:
              format: date-time
              readOnly: true
              type: string
            last_updated_by:
              readOnly: true
              type: string
          type: object
      required:
        - details
        - name
        - type
      type: object
    NumericalFeedbackDefinition_Update:
      allOf:
        - $ref: "#/components/schemas/Feedback_Update"
        - properties:
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail_Update"
          type: object
      required:
        - details
        - name
        - type
      type: object
    NumericalFeedbackDetail:
      properties:
        max:
          type: number
        min:
          type: number
      required:
        - max
        - min
      type: object
    NumericalFeedbackDetail_Create:
      properties:
        max:
          type: number
        min:
          type: number
      required:
        - max
        - min
      type: object
    NumericalFeedbackDetail_Public:
      properties:
        max:
          type: number
        min:
          type: number
      required:
        - max
        - min
      type: object
    NumericalFeedbackDetail_Update:
      properties:
        max:
          type: number
        min:
          type: number
      required:
        - max
        - min
      type: object
    PageColumns:
      properties:
        columns:
          items:
            $ref: "#/components/schemas/Column"
          type: array
      type: object
    PercentageValueStat_Public:
      allOf:
        - $ref: "#/components/schemas/ProjectStatItemObject_Public"
        - properties:
            value:
              $ref: "#/components/schemas/PercentageValues_Public"
          type: object
      type: object
    PercentageValues:
      properties:
        p50:
          type: number
        p90:
          type: number
        p99:
          type: number
      type: object
    PercentageValues_Detailed:
      properties:
        p50:
          type: number
        p90:
          type: number
        p99:
          type: number
      readOnly: true
      type: object
    PercentageValues_Public:
      properties:
        p50:
          type: number
        p90:
          type: number
        p99:
          type: number
      type: object
    Project:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        description:
          type: string
        duration:
          $ref: "#/components/schemas/PercentageValues"
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScoreAverage"
          readOnly: true
          type: array
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        last_updated_trace_at:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        total_estimated_cost:
          format: double
          readOnly: true
          type: number
        usage:
          additionalProperties:
            format: double
            readOnly: true
            type: number
          readOnly: true
          type: object
      required:
        - name
      type: object
    ProjectMetricRequest_Public:
      properties:
        interval:
          enum:
            - HOURLY
            - DAILY
            - WEEKLY
          type: string
        interval_end:
          format: date-time
          type: string
        interval_start:
          format: date-time
          type: string
        metric_type:
          enum:
            - FEEDBACK_SCORES
            - TRACE_COUNT
            - TOKEN_USAGE
            - DURATION
            - COST
          type: string
      type: object
    ProjectMetricResponse_Public:
      properties:
        interval:
          enum:
            - HOURLY
            - DAILY
            - WEEKLY
          type: string
        metric_type:
          enum:
            - FEEDBACK_SCORES
            - TRACE_COUNT
            - TOKEN_USAGE
            - DURATION
            - COST
          type: string
        project_id:
          format: uuid
          type: string
        results:
          items:
            $ref: "#/components/schemas/ResultsNumber_Public"
          type: array
      type: object
    ProjectPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/Project_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        sortableBy:
          items:
            type: string
          type: array
        total:
          format: int64
          type: integer
      type: object
    ProjectRetrieve_Detailed:
      properties:
        name:
          type: string
      required:
        - name
      type: object
    ProjectStatItemObject_Public:
      discriminator:
        mapping:
          AVG: "#/components/schemas/AvgValueStat_Public"
          COUNT: "#/components/schemas/CountValueStat_Public"
          PERCENTAGE: "#/components/schemas/PercentageValueStat_Public"
        propertyName: type
      properties:
        name:
          type: string
        type:
          enum:
            - COUNT
            - PERCENTAGE
            - AVG
          type: string
      type: object
    ProjectStatsSummary:
      properties:
        content:
          items:
            $ref: "#/components/schemas/ProjectStatsSummaryItem"
          type: array
      type: object
    ProjectStatsSummaryItem:
      properties:
        duration:
          $ref: "#/components/schemas/PercentageValues"
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScoreAverage"
          type: array
        project_id:
          format: uuid
          type: string
        total_estimated_cost:
          format: double
          type: number
        usage:
          additionalProperties:
            format: double
            type: number
          type: object
      type: object
    ProjectStats_Public:
      properties:
        stats:
          items:
            $ref: "#/components/schemas/ProjectStatItemObject_Public"
          type: array
      type: object
    ProjectUpdate:
      properties:
        description:
          type: string
        name:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
      type: object
    Project_Detailed:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        description:
          type: string
        duration:
          $ref: "#/components/schemas/PercentageValues_Detailed"
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScoreAverage_Detailed"
          readOnly: true
          type: array
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        last_updated_trace_at:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        total_estimated_cost:
          format: double
          readOnly: true
          type: number
        usage:
          additionalProperties:
            format: double
            readOnly: true
            type: number
          readOnly: true
          type: object
      required:
        - name
      type: object
    Project_Public:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        description:
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        last_updated_trace_at:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
      required:
        - name
      type: object
    Project_Write:
      properties:
        description:
          type: string
        name:
          type: string
      required:
        - name
      type: object
    Prompt:
      properties:
        change_description:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        latest_version:
          $ref: "#/components/schemas/PromptVersion"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        name:
          type: string
        template:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        type:
          enum:
            - mustache
            - jinja2
          type: string
        version_count:
          format: int64
          readOnly: true
          type: integer
      required:
        - name
      type: object
    PromptPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/Prompt_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    PromptVersion:
      properties:
        change_description:
          type: string
        commit:
          description: version short unique identifier, generated if absent. it must
            be 8 characters long
          pattern: ^[a-zA-Z0-9]{8}$
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          description: version unique identifier, generated if absent
          format: uuid
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode"
        prompt_id:
          format: uuid
          readOnly: true
          type: string
        template:
          type: string
        type:
          enum:
            - mustache
            - jinja2
          type: string
        variables:
          items:
            readOnly: true
            type: string
          readOnly: true
          type: array
          uniqueItems: true
      readOnly: true
      required:
        - template
      type: object
    PromptVersionLink:
      properties:
        commit:
          readOnly: true
          type: string
        id:
          format: uuid
          type: string
        prompt_id:
          format: uuid
          readOnly: true
          type: string
      required:
        - id
      type: object
    PromptVersionLink_Public:
      properties:
        commit:
          readOnly: true
          type: string
        id:
          format: uuid
          type: string
        prompt_id:
          format: uuid
          readOnly: true
          type: string
      required:
        - id
      type: object
    PromptVersionLink_Write:
      properties:
        id:
          format: uuid
          type: string
      required:
        - id
      type: object
    PromptVersionPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/PromptVersion_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    PromptVersionRetrieve_Detail:
      properties:
        commit:
          type: string
        name:
          type: string
      required:
        - name
      type: object
    PromptVersion_Detail:
      properties:
        change_description:
          type: string
        commit:
          description: version short unique identifier, generated if absent. it must
            be 8 characters long
          pattern: ^[a-zA-Z0-9]{8}$
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          description: version unique identifier, generated if absent
          format: uuid
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Detail"
        prompt_id:
          format: uuid
          readOnly: true
          type: string
        template:
          type: string
        type:
          enum:
            - mustache
            - jinja2
          type: string
        variables:
          items:
            readOnly: true
            type: string
          readOnly: true
          type: array
          uniqueItems: true
      required:
        - template
      type: object
    PromptVersion_Public:
      properties:
        change_description:
          type: string
        commit:
          description: version short unique identifier, generated if absent. it must
            be 8 characters long
          pattern: ^[a-zA-Z0-9]{8}$
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          description: version unique identifier, generated if absent
          format: uuid
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        prompt_id:
          format: uuid
          readOnly: true
          type: string
        template:
          type: string
        type:
          enum:
            - mustache
            - jinja2
          type: string
      required:
        - template
      type: object
    Prompt_Detail:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        latest_version:
          $ref: "#/components/schemas/PromptVersion_Detail"
        name:
          type: string
        version_count:
          format: int64
          readOnly: true
          type: integer
      required:
        - name
      type: object
    Prompt_Public:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        id:
          format: uuid
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          type: string
        version_count:
          format: int64
          readOnly: true
          type: integer
      required:
        - name
      type: object
    Prompt_Updatable:
      properties:
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        name:
          type: string
      required:
        - name
      type: object
    Prompt_Write:
      properties:
        change_description:
          type: string
        description:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        id:
          format: uuid
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
        name:
          type: string
        template:
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        type:
          enum:
            - mustache
            - jinja2
          type: string
      required:
        - name
      type: object
    ProviderApiKey:
      properties:
        api_key:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          maxLength: 150
          minLength: 0
          type: string
        provider:
          enum:
            - openai
            - anthropic
            - gemini
          type: string
      required:
        - api_key
        - provider
      type: object
    ProviderApiKeyUpdate:
      properties:
        api_key:
          type: string
        name:
          maxLength: 150
          minLength: 0
          type: string
      required:
        - api_key
      type: object
    ProviderApiKey_Public:
      properties:
        api_key:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        name:
          maxLength: 150
          minLength: 0
          type: string
        provider:
          enum:
            - openai
            - anthropic
            - gemini
          type: string
      required:
        - api_key
        - provider
      type: object
    ProviderApiKey_Write:
      properties:
        api_key:
          type: string
        name:
          maxLength: 150
          minLength: 0
          type: string
        provider:
          enum:
            - openai
            - anthropic
            - gemini
          type: string
      required:
        - api_key
        - provider
      type: object
    ResponseFormat:
      properties:
        json_schema:
          $ref: "#/components/schemas/JsonSchema"
        type:
          enum:
            - text
            - json_object
            - json_schema
          type: string
      type: object
    ResultsNumber_Public:
      properties:
        data:
          items:
            $ref: "#/components/schemas/DataPointNumber_Public"
          type: array
        name:
          type: string
      type: object
    ScoreName:
      properties:
        name:
          type: string
      type: object
    Span:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        duration:
          description: Duration in milliseconds as a decimal number to support sub-millisecond
            precision
          format: double
          readOnly: true
          type: number
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo"
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScore"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode"
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode"
        model:
          type: string
        name:
          type: string
        output:
          $ref: "#/components/schemas/JsonNode"
        parent_span_id:
          format: uuid
          type: string
        project_id:
          format: uuid
          readOnly: true
          type: string
        project_name:
          description: If null, the default project is used
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        provider:
          type: string
        start_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        total_estimated_cost:
          exclusiveMinimum: false
          minimum: 0.0
          type: number
        total_estimated_cost_version:
          type: string
        trace_id:
          format: uuid
          type: string
        type:
          enum:
            - general
            - tool
            - llm
          type: string
        usage:
          additionalProperties:
            format: int32
            type: integer
          type: object
      required:
        - name
        - start_time
        - trace_id
        - type
      type: object
    SpanBatch:
      properties:
        spans:
          items:
            $ref: "#/components/schemas/Span"
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - spans
      type: object
    SpanBatch_Write:
      properties:
        spans:
          items:
            $ref: "#/components/schemas/Span_Write"
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - spans
      type: object
    SpanFilter_Public:
      properties:
        field:
          type: string
        key:
          type: string
        operator:
          enum:
            - contains
            - not_contains
            - starts_with
            - ends_with
            - =
            - "!="
            - ">"
            - ">="
            - <
            - <=
          type: string
        value:
          type: string
      type: object
    SpanPage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/Span_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    SpanSearchStreamRequest_Public:
      properties:
        filters:
          items:
            $ref: "#/components/schemas/SpanFilter_Public"
          type: array
        last_retrieved_id:
          format: uuid
          type: string
        limit:
          format: int32
          type: integer
        project_id:
          format: uuid
          type: string
        project_name:
          type: string
        trace_id:
          format: uuid
          type: string
        truncate:
          default: true
          description: Truncate image included in either input, output or metadata
          type: boolean
        type:
          enum:
            - general
            - tool
            - llm
          type: string
      type: object
    SpanUpdate:
      properties:
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo"
        input:
          $ref: "#/components/schemas/JsonNode"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        model:
          type: string
        output:
          $ref: "#/components/schemas/JsonNode"
        parent_span_id:
          format: uuid
          type: string
        project_id:
          description: If null and project_name not specified, Default Project is
            assumed
          format: uuid
          type: string
        project_name:
          description: If null and project_id not specified, Default Project is assumed
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        provider:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        total_estimated_cost:
          exclusiveMinimum: false
          minimum: 0.0
          type: number
        trace_id:
          format: uuid
          type: string
        usage:
          additionalProperties:
            format: int32
            type: integer
          type: object
      required:
        - trace_id
      type: object
    Span_Public:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment_Public"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        duration:
          description: Duration in milliseconds as a decimal number to support sub-millisecond
            precision
          format: double
          readOnly: true
          type: number
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo_Public"
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScore_Public"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode_Public"
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        model:
          type: string
        name:
          type: string
        output:
          $ref: "#/components/schemas/JsonNode_Public"
        parent_span_id:
          format: uuid
          type: string
        project_id:
          format: uuid
          readOnly: true
          type: string
        provider:
          type: string
        start_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        total_estimated_cost:
          exclusiveMinimum: false
          minimum: 0.0
          type: number
        total_estimated_cost_version:
          type: string
        trace_id:
          format: uuid
          type: string
        type:
          enum:
            - general
            - tool
            - llm
          type: string
        usage:
          additionalProperties:
            format: int32
            type: integer
          type: object
      required:
        - name
        - start_time
        - trace_id
        - type
      type: object
    Span_Write:
      properties:
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo_Write"
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode_Write"
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
        model:
          type: string
        name:
          type: string
        output:
          $ref: "#/components/schemas/JsonNode_Write"
        parent_span_id:
          format: uuid
          type: string
        project_name:
          description: If null, the default project is used
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        provider:
          type: string
        start_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        total_estimated_cost:
          exclusiveMinimum: false
          minimum: 0.0
          type: number
        total_estimated_cost_version:
          type: string
        trace_id:
          format: uuid
          type: string
        type:
          enum:
            - general
            - tool
            - llm
          type: string
        usage:
          additionalProperties:
            format: int32
            type: integer
          type: object
      required:
        - name
        - start_time
        - trace_id
        - type
      type: object
    StreamOptions:
      properties:
        include_usage:
          type: boolean
      type: object
    Tool:
      properties:
        function:
          $ref: "#/components/schemas/Function"
        type:
          enum:
            - function
          type: string
      type: object
    ToolCall:
      properties:
        function:
          $ref: "#/components/schemas/FunctionCall"
        id:
          type: string
        index:
          format: int32
          type: integer
        type:
          enum:
            - function
          type: string
      type: object
    Trace:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        duration:
          description: Duration in milliseconds as a decimal number to support sub-millisecond
            precision
          format: double
          readOnly: true
          type: number
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo"
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScore"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode"
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode"
        name:
          type: string
        output:
          $ref: "#/components/schemas/JsonNode"
        project_id:
          format: uuid
          readOnly: true
          type: string
        project_name:
          description: If null, the default project is used
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        start_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        total_estimated_cost:
          readOnly: true
          type: number
        usage:
          additionalProperties:
            format: int64
            readOnly: true
            type: integer
          readOnly: true
          type: object
      required:
        - name
        - start_time
      type: object
    TraceBatch:
      properties:
        traces:
          items:
            $ref: "#/components/schemas/Trace"
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - traces
      type: object
    TraceBatch_Write:
      properties:
        traces:
          items:
            $ref: "#/components/schemas/Trace_Write"
          maxItems: 1000
          minItems: 1
          type: array
      required:
        - traces
      type: object
    TraceCountResponse:
      properties:
        workspaces_traces_count:
          items:
            $ref: "#/components/schemas/WorkspaceTraceCount"
          type: array
      type: object
    TracePage_Public:
      properties:
        content:
          items:
            $ref: "#/components/schemas/Trace_Public"
          type: array
        page:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
      type: object
    TraceUpdate:
      properties:
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo"
        input:
          $ref: "#/components/schemas/JsonNode"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        output:
          $ref: "#/components/schemas/JsonNode"
        project_id:
          description: If null and project_name not specified, Default Project is
            assumed
          format: uuid
          type: string
        project_name:
          description: If null and project_id not specified, Default Project is assumed
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    Trace_Public:
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment_Public"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          readOnly: true
          type: string
        duration:
          description: Duration in milliseconds as a decimal number to support sub-millisecond
            precision
          format: double
          readOnly: true
          type: number
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo_Public"
        feedback_scores:
          items:
            $ref: "#/components/schemas/FeedbackScore_Public"
          readOnly: true
          type: array
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode_Public"
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        last_updated_by:
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        name:
          type: string
        output:
          $ref: "#/components/schemas/JsonNode_Public"
        project_id:
          format: uuid
          readOnly: true
          type: string
        start_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        total_estimated_cost:
          readOnly: true
          type: number
        usage:
          additionalProperties:
            format: int64
            readOnly: true
            type: integer
          readOnly: true
          type: object
      required:
        - name
        - start_time
      type: object
    Trace_Write:
      properties:
        end_time:
          format: date-time
          type: string
        error_info:
          $ref: "#/components/schemas/ErrorInfo_Write"
        id:
          format: uuid
          type: string
        input:
          $ref: "#/components/schemas/JsonNode_Write"
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
        name:
          type: string
        output:
          $ref: "#/components/schemas/JsonNode_Write"
        project_name:
          description: If null, the default project is used
          pattern: (?s)^\s*(\S.*\S|\S)\s*$
          type: string
        start_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
        - name
        - start_time
      type: object
    Usage:
      properties:
        completion_tokens:
          format: int32
          type: integer
        completion_tokens_details:
          $ref: "#/components/schemas/CompletionTokensDetails"
        prompt_tokens:
          format: int32
          type: integer
        total_tokens:
          format: int32
          type: integer
      type: object
    WorkspaceTraceCount:
      properties:
        trace_count:
          format: int32
          type: integer
        workspace:
          type: string
      type: object
info:
  contact:
    name: Github Repository
    url: https://github.com/comet-ml/opik
  description: "The Opik REST API is currently in beta and subject to change. If you\
    \ have any questions or feedback about the APIs, please reach out on GitHub: https://github.com/comet-ml/opik.\n\
    \nAll of the methods listed in this documentation are used by either the SDK or\
    \ the UI to interact with the Opik server. As a result,\nthe methods have been\
    \ optimized for these use-cases in mind. If you are looking for a method that\
    \ is not listed above, please create\nand issue on GitHub or raise a PR!\n\nOpik\
    \ includes two main deployment options that results in slightly different API\
    \ usage:\n\n- **Self-hosted Opik instance:** You will simply need to specify the\
    \ URL as `http://localhost:5173/api/<endpoint_path>` or similar. This is the default\
    \ option for the docs.\n- **Opik Cloud:** You will need to specify the Opik API\
    \ Key and Opik Workspace in the header. The format of the header should be:\n\n\
    \  ```\n  {\n    \"Comet-Workspace\": \"your-workspace-name\",\n    \"authorization\"\
    : \"your-api-key\"\n  }\n  ```\n\n  The full payload would therefore look like:\n\
    \  \n  ```\n  curl -X GET 'https://www.comet.com/opik/api/v1/private/projects'\
    \ \\\n  -H 'Accept: application/json' \\\n  -H 'Comet-Workspace: <your-workspace-name>'\
    \ \\\n  -H 'authorization: <your-api-key>'\n  ```\n\n  Do take note here that\
    \ the authorization header value does not include the `Bearer ` prefix. To switch\
    \ to using the Opik Cloud in the documentation, you can\n  click on the edit button\
    \ displayed when hovering over the `Base URL` displayed on the right hand side\
    \ of the docs.\n"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Opik REST API
  version: 1.0.0
openapi: 3.1.0
paths:
  /is-alive/ping:
    get:
      operationId: isAlive
      responses:
        default:
          content:
            application/json: {}
          description: default response
  /is-alive/ver:
    get:
      operationId: version
      responses:
        default:
          content:
            application/json: {}
          description: default response
  /v1/internal/usage/bi-datasets:
    get:
      description: Get datasets information for BI events per user per workspace
      operationId: getDatasetBiInfo
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BiInformationResponse"
          description: Datasets BiInformationResponse resource
      summary: Get datasets information for BI events
      tags:
        - System usage
  /v1/internal/usage/bi-experiments:
    get:
      description: Get experiments information for BI events per user per workspace
      operationId: getExperimentBiInfo
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BiInformationResponse"
          description: Experiments BiInformationResponse resource
      summary: Get experiments information for BI events
      tags:
        - System usage
  /v1/internal/usage/bi-traces:
    get:
      description: Get traces information for BI events per user per workspace
      operationId: getTracesBiInfo
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BiInformationResponse"
          description: Traces BiInformationResponse resource
      summary: Get traces information for BI events
      tags:
        - System usage
  /v1/internal/usage/workspace-trace-counts:
    get:
      description: Get traces count on previous day for all available workspaces
      operationId: getTracesCountForWorkspaces
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCountResponse"
          description: TraceCountResponse resource
      summary: Get traces count on previous day for all available workspaces
      tags:
        - System usage
  /v1/private/auth:
    post:
      description: Check user access to workspace
      operationId: checkAccess
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthDetailsHolder"
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Access forbidden
      summary: Check user access to workspace
      tags:
        - Check
  /v1/private/automations/projects/{projectId}/evaluators:
    get:
      description: Find project Evaluators
      operationId: findEvaluators
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationRuleEvaluatorPage_Public"
          description: Evaluators resource
      summary: Find project Evaluators
      tags:
        - Automation rule evaluators
    post:
      description: Create automation rule evaluator
      operationId: createAutomationRuleEvaluator
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomationRuleEvaluator_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/automations/projects/{projectId}/evaluators/{evaluatorId}
              required: true
              schema:
                type: string
              style: simple
      summary: Create automation rule evaluator
      tags:
        - Automation rule evaluators
  /v1/private/automations/projects/{projectId}/evaluators/delete:
    post:
      description: Delete automation rule evaluators batch
      operationId: deleteAutomationRuleEvaluatorBatch
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete automation rule evaluators
      tags:
        - Automation rule evaluators
  /v1/private/automations/projects/{projectId}/evaluators/{id}:
    get:
      description: Get automation rule by id
      operationId: getEvaluatorById
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationRuleEvaluator_Public"
          description: Automation Rule resource
      summary: Get automation rule evaluator by id
      tags:
        - Automation rule evaluators
    patch:
      description: update Automation Rule Evaluator by id
      operationId: updateAutomationRuleEvaluator
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomationRuleEvaluatorUpdate"
      responses:
        "204":
          description: No content
      summary: update Automation Rule Evaluator by id
      tags:
        - Automation rule evaluators
  /v1/private/automations/projects/{projectId}/evaluators/{id}/logs:
    get:
      description: Get automation rule evaluator logs by id
      operationId: getEvaluatorLogsById
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - in: query
          name: size
          schema:
            default: 1000
            format: int32
            minimum: 1
            type: integer
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogPage"
          description: Automation rule evaluator logs resource
      summary: Get automation rule evaluator logs by id
      tags:
        - Automation rule evaluators
  /v1/private/chat/completions:
    post:
      description: Create chat completions
      operationId: createChatCompletions
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatCompletionResponse"
            text/event-stream:
              schema:
                items:
                  anyOf:
                    - $ref: "#/components/schemas/ChatCompletionResponse"
                    - $ref: "#/components/schemas/ErrorMessage"
                  type: object
                type: array
          description: Chat completions response
      summary: Create chat completions
      tags:
        - Chat Completions
  /v1/private/datasets:
    get:
      description: Find datasets
      operationId: findDatasets
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: with_experiments_only
          schema:
            type: boolean
        - in: query
          name: prompt_id
          schema:
            format: uuid
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: sorting
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetPage_Public"
          description: Dataset resource
      summary: Find datasets
      tags:
        - Datasets
    post:
      description: Create dataset
      operationId: createDataset
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/api/v1/private/datasets/{id}
              required: true
              schema:
                type: string
              style: simple
      summary: Create dataset
      tags:
        - Datasets
  /v1/private/datasets/delete:
    post:
      description: Delete dataset by name
      operationId: deleteDatasetByName
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetIdentifier"
      responses:
        "204":
          description: No content
      summary: Delete dataset by name
      tags:
        - Datasets
  /v1/private/datasets/delete-batch:
    post:
      description: Delete datasets batch
      operationId: deleteDatasetsBatch
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No content
      summary: Delete datasets
      tags:
        - Datasets
  /v1/private/datasets/items:
    put:
      description: Create/update dataset items based on dataset item id
      operationId: createOrUpdateDatasetItems
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetItemBatch_Write"
      responses:
        "204":
          description: No content
      summary: Create/update dataset items
      tags:
        - Datasets
  /v1/private/datasets/items/delete:
    post:
      description: Delete dataset items
      operationId: deleteDatasetItems
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetItemsDelete"
      responses:
        "204":
          description: No content
      summary: Delete dataset items
      tags:
        - Datasets
  /v1/private/datasets/items/stream:
    post:
      description: Stream dataset items
      operationId: streamDatasetItems
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetItemStreamRequest"
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  anyOf:
                    - $ref: "#/components/schemas/DatasetItem"
                    - $ref: "#/components/schemas/ErrorMessage"
                  type: string
                maxItems: 2000
                type: array
          description: Dataset items stream or error during process
      summary: Stream dataset items
      tags:
        - Datasets
  /v1/private/datasets/items/{itemId}:
    get:
      description: Get dataset item by id
      operationId: getDatasetItemById
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetItem_Public"
          description: Dataset item resource
      summary: Get dataset item by id
      tags:
        - Datasets
  /v1/private/datasets/retrieve:
    post:
      description: Get dataset by name
      operationId: getDatasetByIdentifier
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetIdentifier_Public"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset_Public"
          description: Dataset resource
      summary: Get dataset by name
      tags:
        - Datasets
  /v1/private/datasets/{id}:
    delete:
      description: Delete dataset by id
      operationId: deleteDataset
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "204":
          description: No content
      summary: Delete dataset by id
      tags:
        - Datasets
    get:
      description: Get dataset by id
      operationId: getDatasetById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset_Public"
          description: Dataset resource
      summary: Get dataset by id
      tags:
        - Datasets
    put:
      description: Update dataset by id
      operationId: updateDataset
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetUpdate"
      responses:
        "204":
          description: No content
      summary: Update dataset by id
      tags:
        - Datasets
  /v1/private/datasets/{id}/items:
    get:
      description: Get dataset items
      operationId: getDatasetItems
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: truncate
          schema:
            description: Truncate image included in either input, output or metadata
            type: boolean
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetItemPage_Public"
          description: Dataset items resource
      summary: Get dataset items
      tags:
        - Datasets
  /v1/private/datasets/{id}/items/experiments/items:
    get:
      description: Find dataset items with experiment items
      operationId: findDatasetItemsWithExperimentItems
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: experiment_ids
          required: true
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: truncate
          schema:
            description: Truncate image included in either input, output or metadata
            type: boolean
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetItemPage_Compare"
          description: Dataset item resource
      summary: Find dataset items with experiment items
      tags:
        - Datasets
  /v1/private/datasets/{id}/items/experiments/items/output/columns:
    get:
      description: Get dataset items output columns
      operationId: getDatasetItemsOutputColumns
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - in: query
          name: experiment_ids
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageColumns"
          description: Dataset item output columns
      summary: Get dataset items output columns
      tags:
        - Datasets
  /v1/private/experiments:
    get:
      description: Find experiments
      operationId: findExperiments
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: datasetId
          schema:
            format: uuid
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: dataset_deleted
          schema:
            type: boolean
        - in: query
          name: prompt_id
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentPage_Public"
          description: Experiments resource
      summary: Find experiments
      tags:
        - Experiments
    post:
      description: Create experiment
      operationId: createExperiment
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Experiment_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/experiments/{id}
              required: true
              schema:
                type: string
              style: simple
      summary: Create experiment
      tags:
        - Experiments
  /v1/private/experiments/delete:
    post:
      description: Delete experiments by id
      operationId: deleteExperimentsById
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentsDelete"
      responses:
        "204":
          description: No content
      summary: Delete experiments by id
      tags:
        - Experiments
  /v1/private/experiments/feedback-scores/names:
    get:
      description: Find Feedback Score names
      operationId: findFeedbackScoreNames
      parameters:
        - in: query
          name: experiment_ids
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Feedback Scores resource
      summary: Find Feedback Score names
      tags:
        - Experiments
  /v1/private/experiments/items:
    post:
      description: Create experiment items
      operationId: createExperimentItems
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentItemsBatch"
      responses:
        "204":
          description: No content
      summary: Create experiment items
      tags:
        - Experiments
  /v1/private/experiments/items/delete:
    post:
      description: Delete experiment items
      operationId: deleteExperimentItems
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentItemsDelete"
      responses:
        "204":
          description: No content
      summary: Delete experiment items
      tags:
        - Experiments
  /v1/private/experiments/items/stream:
    post:
      description: Stream experiment items
      operationId: streamExperimentItems
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentItemStreamRequest"
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  anyOf:
                    - $ref: "#/components/schemas/ExperimentItem"
                    - $ref: "#/components/schemas/ErrorMessage"
                  type: string
                maxItems: 2000
                type: array
          description: Experiment items stream or error during process
      summary: Stream experiment items
      tags:
        - Experiments
  /v1/private/experiments/items/{id}:
    get:
      description: Get experiment item by id
      operationId: getExperimentItemById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentItem_Public"
          description: Experiment item resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
          description: Not found
      summary: Get experiment item by id
      tags:
        - Experiments
  /v1/private/experiments/retrieve:
    post:
      description: Get experiment by name
      operationId: getExperimentByName
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Identifier_Public"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment_Public"
          description: Experiments resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
          description: Not found
      summary: Get experiment by name
      tags:
        - Experiments
  /v1/private/experiments/{id}:
    get:
      description: Get experiment by id
      operationId: getExperimentById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment_Public"
          description: Experiment resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
          description: Not found
      summary: Get experiment by id
      tags:
        - Experiments
  /v1/private/feedback-definitions:
    get:
      description: Find Feedback definitions
      operationId: findFeedbackDefinitions
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: type
          schema:
            enum:
              - numerical
              - categorical
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackDefinitionPage_Public"
          description: Feedback definitions resource
      summary: Find Feedback definitions
      tags:
        - Feedback-definitions
    post:
      description: Get feedback definition
      operationId: createFeedbackDefinition
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback_Create"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/feedback-definitions/{feedbackId}
              required: true
              schema:
                type: string
              style: simple
      summary: Create feedback definition
      tags:
        - Feedback-definitions
  /v1/private/feedback-definitions/delete:
    post:
      description: Delete feedback definitions batch
      operationId: deleteFeedbackDefinitionsBatch
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete feedback definitions
      tags:
        - Feedback-definitions
  /v1/private/feedback-definitions/{id}:
    delete:
      description: Delete feedback definition by id
      operationId: deleteFeedbackDefinitionById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "204":
          description: No Content
      summary: Delete feedback definition by id
      tags:
        - Feedback-definitions
    get:
      description: Get feedback definition by id
      operationId: getFeedbackDefinitionById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback_Public"
          description: Feedback definition resource
      summary: Get feedback definition by id
      tags:
        - Feedback-definitions
    put:
      description: Update feedback definition by id
      operationId: updateFeedbackDefinition
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback_Update"
      responses:
        "204":
          description: No Content
      summary: Update feedback definition by id
      tags:
        - Feedback-definitions
  /v1/private/llm-provider-key:
    get:
      description: Find LLM Provider's ApiKeys
      operationId: findLlmProviderKeys
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPage_Public"
          description: LLMProviderApiKey resource
      summary: Find LLM Provider's ApiKeys
      tags:
        - LlmProviderKey
    post:
      description: Store LLM Provider's ApiKey
      operationId: storeLlmProviderApiKey
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProviderApiKey_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/proxy/api_key/{apiKeyId}
              required: true
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Access forbidden
      summary: Store LLM Provider's ApiKey
      tags:
        - LlmProviderKey
  /v1/private/llm-provider-key/delete:
    post:
      description: Delete LLM Provider's ApiKeys batch
      operationId: deleteLlmProviderApiKeysBatch
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete LLM Provider's ApiKeys
      tags:
        - LlmProviderKey
  /v1/private/llm-provider-key/{id}:
    get:
      description: Get LLM Provider's ApiKey by id
      operationId: getLlmProviderApiKeyById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProviderApiKey_Public"
          description: LLMProviderApiKey resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
          description: Not found
      summary: Get LLM Provider's ApiKey by id
      tags:
        - LlmProviderKey
    patch:
      description: Update LLM Provider's ApiKey
      operationId: updateLlmProviderApiKey
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProviderApiKeyUpdate"
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Not found
      summary: Update LLM Provider's ApiKey
      tags:
        - LlmProviderKey
  /v1/private/projects:
    get:
      description: Find projects
      operationId: findProjects
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: sorting
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPage_Public"
          description: Project resource
      summary: Find projects
      tags:
        - Projects
    post:
      description: Create project
      operationId: createProject
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/projects/{projectId}
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Bad Request
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Unprocessable Content
      summary: Create project
      tags:
        - Projects
  /v1/private/projects/delete:
    post:
      description: Delete projects batch
      operationId: deleteProjectsBatch
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete projects
      tags:
        - Projects
  /v1/private/projects/feedback-scores/names:
    get:
      description: Find Feedback Score names By Project Ids
      operationId: findFeedbackScoreNamesByProjectIds
      parameters:
        - in: query
          name: project_ids
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackScoreNames"
          description: Feedback Scores resource
      summary: Find Feedback Score names By Project Ids
      tags:
        - Projects
  /v1/private/projects/retrieve:
    post:
      description: Retrieve project
      operationId: retrieveProject
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectRetrieve_Detailed"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project_Detailed"
          description: Project resource
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detailed"
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detailed"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detailed"
          description: Unprocessable Content
      summary: Retrieve project
      tags:
        - Projects
  /v1/private/projects/stats:
    get:
      description: Get Project Stats
      operationId: getProjectStats
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: sorting
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectStatsSummary"
          description: Project Stats
      summary: Get Project Stats
      tags:
        - Projects
  /v1/private/projects/{id}:
    delete:
      description: Delete project by id
      operationId: deleteProjectById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "204":
          description: No Content
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Conflict
      summary: Delete project by id
      tags:
        - Projects
    get:
      description: Get project by id
      operationId: getProjectById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project_Public"
          description: Project resource
      summary: Get project by id
      tags:
        - Projects
    patch:
      description: Update project by id
      operationId: updateProject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdate"
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Bad Request
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Unprocessable Content
      summary: Update project by id
      tags:
        - Projects
  /v1/private/projects/{id}/metrics:
    post:
      description: Gets specified metrics for a project
      operationId: getProjectMetrics
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectMetricRequest_Public"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectMetricResponse_Public"
          description: Project Metrics
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
          description: Not Found
      summary: Get Project Metrics
      tags:
        - Projects
  /v1/private/prompts:
    get:
      description: Get prompts
      operationId: getPrompts
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptPage_Public"
          description: OK
      summary: Get prompts
      tags:
        - Prompts
    post:
      description: Create prompt
      operationId: createPrompt
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prompt_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/prompts/{promptId}
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Unprocessable Content
      summary: Create prompt
      tags:
        - Prompts
  /v1/private/prompts/delete:
    post:
      description: Delete prompts batch
      operationId: deletePromptsBatch
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete prompts
      tags:
        - Prompts
  /v1/private/prompts/versions:
    post:
      description: Create prompt version
      operationId: createPromptVersion
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePromptVersion_Detail"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptVersion_Detail"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Unprocessable Content
      summary: Create prompt version
      tags:
        - Prompts
  /v1/private/prompts/versions/retrieve:
    post:
      description: Retrieve prompt version
      operationId: retrievePromptVersion
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptVersionRetrieve_Detail"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptVersion_Detail"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Unprocessable Content
      summary: Retrieve prompt version
      tags:
        - Prompts
  /v1/private/prompts/versions/{versionId}:
    get:
      description: Get prompt version by id
      operationId: getPromptVersionById
      parameters:
        - in: path
          name: versionId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptVersion_Detail"
          description: Prompt version resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Not Found
      summary: Get prompt version by id
      tags:
        - Prompts
  /v1/private/prompts/{id}:
    delete:
      description: Delete prompt
      operationId: deletePrompt
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "204":
          description: No content
      summary: Delete prompt
      tags:
        - Prompts
    get:
      description: Get prompt by id
      operationId: getPromptById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prompt_Detail"
          description: Prompt resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Detail"
          description: Not Found
      summary: Get prompt by id
      tags:
        - Prompts
    put:
      description: Update prompt
      operationId: updatePrompt
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prompt_Updatable"
      responses:
        "204":
          description: No content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Unprocessable Content
      summary: Update prompt
      tags:
        - Prompts
  /v1/private/prompts/{id}/versions:
    get:
      description: Get prompt versions
      operationId: getPromptVersions
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptVersionPage_Public"
          description: OK
      summary: Get prompt versions
      tags:
        - Prompts
  /v1/private/spans:
    get:
      description: Get spans by project_name or project_id and optionally by trace_id
        and/or type
      operationId: getSpansByProject
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: project_name
          schema:
            type: string
        - in: query
          name: project_id
          schema:
            format: uuid
            type: string
        - in: query
          name: trace_id
          schema:
            format: uuid
            type: string
        - in: query
          name: type
          schema:
            enum:
              - general
              - tool
              - llm
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: truncate
          schema:
            description: Truncate image included in either input, output or metadata
            type: boolean
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpanPage_Public"
          description: Spans resource
      summary: Get spans by project_name or project_id and optionally by trace_id
        and/or type
      tags:
        - Spans
    post:
      description: Create span
      operationId: createSpan
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Span_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/spans/{spanId}
              required: true
              schema:
                type: string
              style: simple
      summary: Create span
      tags:
        - Spans
  /v1/private/spans/batch:
    post:
      description: Create spans
      operationId: createSpans
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpanBatch_Write"
      responses:
        "204":
          description: No Content
      summary: Create spans
      tags:
        - Spans
  /v1/private/spans/comments/delete:
    post:
      description: Delete span comments
      operationId: deleteSpanComments
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete span comments
      tags:
        - Spans
  /v1/private/spans/comments/{commentId}:
    patch:
      description: Update span comment by id
      operationId: updateSpanComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "204":
          description: No Content
        "404":
          description: Not found
      summary: Update span comment by id
      tags:
        - Spans
  /v1/private/spans/feedback-scores:
    put:
      description: Batch feedback scoring for spans
      operationId: scoreBatchOfSpans
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScoreBatch"
      responses:
        "204":
          description: No Content
      summary: Batch feedback scoring for spans
      tags:
        - Spans
  /v1/private/spans/feedback-scores/names:
    get:
      description: Find Feedback Score names
      operationId: findFeedbackScoreNames_1
      parameters:
        - in: query
          name: project_id
          schema:
            format: uuid
            type: string
        - in: query
          name: type
          schema:
            enum:
              - general
              - tool
              - llm
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Feedback Scores resource
      summary: Find Feedback Score names
      tags:
        - Spans
  /v1/private/spans/search:
    post:
      description: Search spans
      operationId: searchSpans
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpanSearchStreamRequest_Public"
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  anyOf:
                    - $ref: "#/components/schemas/Span_Public"
                    - $ref: "#/components/schemas/ErrorMessage_Public"
                  type: string
                maxItems: 2000
                type: array
          description: Spans stream or error during process
        "400":
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
          description: Bad Request
      summary: Search spans
      tags:
        - Spans
  /v1/private/spans/stats:
    get:
      description: Get span stats
      operationId: getSpanStats
      parameters:
        - in: query
          name: project_id
          schema:
            format: uuid
            type: string
        - in: query
          name: project_name
          schema:
            type: string
        - in: query
          name: trace_id
          schema:
            format: uuid
            type: string
        - in: query
          name: type
          schema:
            enum:
              - general
              - tool
              - llm
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectStats_Public"
          description: Span stats resource
      summary: Get span stats
      tags:
        - Spans
  /v1/private/spans/{id}:
    delete:
      description: Delete span by id
      operationId: deleteSpanById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "204":
          description: No Content
        "501":
          description: Not implemented
      summary: Delete span by id
      tags:
        - Spans
    get:
      description: Get span by id
      operationId: getSpanById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Span_Public"
          description: Span resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Span_Public"
          description: Not found
      summary: Get span by id
      tags:
        - Spans
    patch:
      description: Update span by id
      operationId: updateSpan
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpanUpdate"
      responses:
        "204":
          description: No Content
        "404":
          description: Not found
      summary: Update span by id
      tags:
        - Spans
  /v1/private/spans/{id}/comments:
    post:
      description: Add span comment
      operationId: addSpanComment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/spans/{spanId}/comments/{commentId}
              required: true
              schema:
                type: string
              style: simple
      summary: Add span comment
      tags:
        - Spans
  /v1/private/spans/{id}/feedback-scores:
    put:
      description: Add span feedback score
      operationId: addSpanFeedbackScore
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScore"
      responses:
        "204":
          description: No Content
      summary: Add span feedback score
      tags:
        - Spans
  /v1/private/spans/{id}/feedback-scores/delete:
    post:
      description: Delete span feedback score
      operationId: deleteSpanFeedbackScore
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFeedbackScore"
      responses:
        "204":
          description: No Content
      summary: Delete span feedback score
      tags:
        - Spans
  /v1/private/spans/{spanId}/comments/{commentId}:
    get:
      description: Get span comment
      operationId: getSpanComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            format: uuid
            type: string
        - in: path
          name: spanId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: Comment resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Not found
      summary: Get span comment
      tags:
        - Spans
  /v1/private/traces:
    get:
      description: Get traces by project_name or project_id
      operationId: getTracesByProject
      parameters:
        - in: query
          name: page
          schema:
            default: 1
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: size
          schema:
            default: 10
            format: int32
            minimum: 1
            type: integer
        - in: query
          name: project_name
          schema:
            type: string
        - in: query
          name: project_id
          schema:
            format: uuid
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: truncate
          schema:
            description: Truncate image included in either input, output or metadata
            type: boolean
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TracePage_Public"
          description: Trace resource
      summary: Get traces by project_name or project_id
      tags:
        - Traces
    post:
      description: Get trace
      operationId: createTrace
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trace_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/traces/{traceId}
              required: true
              schema:
                type: string
              style: simple
      summary: Create trace
      tags:
        - Traces
  /v1/private/traces/batch:
    post:
      description: Create traces
      operationId: createTraces
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceBatch_Write"
      responses:
        "204":
          description: No Content
      summary: Create traces
      tags:
        - Traces
  /v1/private/traces/comments/delete:
    post:
      description: Delete trace comments
      operationId: deleteTraceComments
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete trace comments
      tags:
        - Traces
  /v1/private/traces/comments/{commentId}:
    patch:
      description: Update trace comment by id
      operationId: updateTraceComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "204":
          description: No Content
        "404":
          description: Not found
      summary: Update trace comment by id
      tags:
        - Traces
  /v1/private/traces/delete:
    post:
      description: Delete traces
      operationId: deleteTraces
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDelete"
      responses:
        "204":
          description: No Content
      summary: Delete traces
      tags:
        - Traces
  /v1/private/traces/feedback-scores:
    put:
      description: Batch feedback scoring for traces
      operationId: scoreBatchOfTraces
      parameters:
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScoreBatch"
      responses:
        "204":
          description: No Content
      summary: Batch feedback scoring for traces
      tags:
        - Traces
  /v1/private/traces/feedback-scores/names:
    get:
      description: Find Feedback Score names
      operationId: findFeedbackScoreNames_2
      parameters:
        - in: query
          name: project_id
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Feedback Scores resource
      summary: Find Feedback Score names
      tags:
        - Traces
  /v1/private/traces/stats:
    get:
      description: Get trace stats
      operationId: getTraceStats
      parameters:
        - in: query
          name: project_id
          schema:
            format: uuid
            type: string
        - in: query
          name: project_name
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectStats_Public"
          description: Trace stats resource
      summary: Get trace stats
      tags:
        - Traces
  /v1/private/traces/{id}:
    delete:
      description: Delete trace by id
      operationId: deleteTraceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "204":
          description: No Content
      summary: Delete trace by id
      tags:
        - Traces
    get:
      description: Get trace by id
      operationId: getTraceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trace_Public"
          description: Trace resource
      summary: Get trace by id
      tags:
        - Traces
    patch:
      description: Update trace by id
      operationId: updateTrace
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceUpdate"
      responses:
        "204":
          description: No Content
      summary: Update trace by id
      tags:
        - Traces
  /v1/private/traces/{id}/comments:
    post:
      description: Add trace comment
      operationId: addTraceComment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "201":
          description: Created
          headers:
            Location:
              example: ${basePath}/v1/private/traces/{traceId}/comments/{commentId}
              required: true
              schema:
                type: string
              style: simple
      summary: Add trace comment
      tags:
        - Traces
  /v1/private/traces/{id}/feedback-scores:
    put:
      description: Add trace feedback score
      operationId: addTraceFeedbackScore
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScore"
      responses:
        "204":
          description: No Content
      summary: Add trace feedback score
      tags:
        - Traces
  /v1/private/traces/{id}/feedback-scores/delete:
    post:
      description: Delete trace feedback score
      operationId: deleteTraceFeedbackScore
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFeedbackScore"
      responses:
        "204":
          description: No Content
      summary: Delete trace feedback score
      tags:
        - Traces
  /v1/private/traces/{traceId}/comments/{commentId}:
    get:
      description: Get trace comment
      operationId: getTraceComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            format: uuid
            type: string
        - in: path
          name: traceId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/WorkspaceHeader"
        - $ref: "#/components/parameters/ApiKeyHeader"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: Comment resource
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Not found
      summary: Get trace comment
      tags:
        - Traces
servers:
  - description: Local server
    url: http://localhost:5173/api
  - description: Opik Cloud
    url: https://www.comet.com/opik/api
tags:
  - description: System usage related resource
    name: System usage
  - description: Access check resources
    name: Check
  - description: Automation rule evaluators resource
    name: Automation rule evaluators
  - description: Chat Completions related resources
    name: Chat Completions
  - description: Dataset resources
    name: Datasets
  - description: Experiment resources
    name: Experiments
  - description: Feedback definitions related resources
    name: Feedback-definitions
  - description: LLM Provider Key
    name: LlmProviderKey
  - description: Project related resources
    name: Projects
  - description: Prompt resources
    name: Prompts
  - description: Span related resources
    name: Spans
  - description: Trace related resources
    name: Traces
